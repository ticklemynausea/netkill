#!/usr/bin/env bash

set -euo pipefail

# Usage: netkill [-s signum] <expr> [expr] ...

function usage {
  bright="[37;1m"
  reset="[0m"

  cat <<EOF
${bright}netkill${reset}

Signals processes that have sockets bound to TCP or UDP ports.

${bright}Usage:${reset} netkill [-s <signum>] <expr> [<expr>] ...

${bright}<expr>${reset} is of the form ${bright}protocol@host:port${reset}. Omitting the protocol will default to TCP. Using an integer as an expression will signal all processes bound to that TCP port. Otherwise, it will signal all processes bound to that TCP host.

${bright}<signum>${reset} defaults to -9 (sigkill)

Usage examples

  netkill 3000 8080
  netkill UDP:50000
  netkill my.frontend.local my.backend.local localhost:9999
  netkill UDP@my.service.local:15000
EOF

  exit 1
}

if [[ "$#" -lt 1 ]]; then
  usage
  exit 0
fi

exprs=()
signal="-9"

for arg in "$@"; do
  if [[ $arg == "-h" ]]; then
    usage
    exit 0
  elif [[ $arg =~ ^-[0-9]+$ ]]; then
    signal=$arg
  elif [[ $arg =~ ^TCP.*$|^UDP.*$ ]]; then
    exprs+=("-i$arg")
  elif [[ $arg =~ ^[0-9]+$ ]]; then
    exprs+=("-iTCP:$arg")
  else
    exprs+=("-iTCP@$arg")
  fi
done

for expr in "${exprs[@]}"; do
  processes=$(lsof "$expr")
  echo "$processes"

  for process in $(echo "$processes" | tail -n +2 | awk '{ print $2 }'); do
    kill "$signal" "$process"
  done
done
